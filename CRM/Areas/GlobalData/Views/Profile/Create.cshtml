@model CRM.Areas.GlobalData.Models.ProfileComplexModel
@{
    ViewBag.Title = "Create";
}
<ul class="breadcrumb no-border no-radius b-b b-light pull-in">
    <li><a href="/globaldata/profile/index"><i class="fa fa-home"></i>基础数据管理</a></li>
    <li class="active">新建基础数据</li>
</ul>

<div>
    <section class="panel panel-default">
        <header class="panel-heading font-bold">新建基础数据</header>

        <div class="panel-body">

            <form id="form1" class="bs-example form-horizontal" action="/globaldata/profile/create" method="post">
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.IDImg, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 required">
                        <input type="hidden" id="Profile_IDImg" name="Profile.IDImg" />
                        <input type="hidden" id="IDNoFaceImg" />
                        <input type="hidden" id="IDNoBackImg" />

                        <a id="btnIDImgFaceUpload" class="btn btn-default">身份证正面<input type="file" id="fileIDNoFaceImg" /> </a>
                        <img id="facePreview" style="width:100px;" />
                        <br />
                        <a id="btnIDImgBackUpload" class="btn btn-default">身份证背面<input type="file" id="fileIDNoBackImg" /></a>
                        <img id="backPreview" style="width:100px;" />
                        @Html.ValidationMessageFor(model => model.Profile.IDImg, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.Name, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 required">
                        @Html.EditorFor(model => model.Profile.Name, new { htmlAttributes = new { @class = "form-control form-control-large", @placeholder = "姓名（自动识别）" } })
                        @Html.ValidationMessageFor(model => model.Profile.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.IDNo, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 required">
                        @Html.EditorFor(model => model.Profile.IDNo, new { htmlAttributes = new { @class = "form-control form-control-large", @placeholder = "身份证号码（自动识别）" } })
                        @Html.ValidationMessageFor(model => model.Profile.IDNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.PersonalPhone, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 required">
                        @Html.EditorFor(model => model.Profile.PersonalPhone, new { htmlAttributes = new { @class = "form-control form-control-large", @maxlength = "11" } })
                        @Html.ValidationMessageFor(model => model.Profile.PersonalPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.NativePlace, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Profile.NativePlace, new { htmlAttributes = new { @class = "form-control form-control-large" } })
                        @Html.ValidationMessageFor(model => model.Profile.NativePlace, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.Gender, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        <select id="Profile_Gender" name="Profile.Gender" class="form-control form-control-normal">
                            <option value="男">男</option>
                            <option value="女">女</option>
                        </select>（自动识别）
                        @Html.ValidationMessageFor(model => model.Profile.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.OfficePhone, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Profile.OfficePhone, new { htmlAttributes = new { @class = "form-control form-control-large" } })
                        @Html.ValidationMessageFor(model => model.Profile.OfficePhone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.Wechat, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Profile.Wechat, new { htmlAttributes = new { @class = "form-control form-control-large" } })
                        @Html.ValidationMessageFor(model => model.Profile.Wechat, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.QQ, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Profile.QQ, new { htmlAttributes = new { @class = "form-control form-control-large" } })
                        @Html.ValidationMessageFor(model => model.Profile.QQ, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.Weibo, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Profile.Weibo, new { htmlAttributes = new { @class = "form-control form-control-large" } })
                        @Html.ValidationMessageFor(model => model.Profile.Weibo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Profile.Remark, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10 ">
                        @Html.TextAreaFor(model => model.Profile.Remark, new { @class = "form-control form-control-large" })
                        @Html.ValidationMessageFor(model => model.Profile.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-lg-offset-2 col-lg-10">
                        <a id="btnSave" class="btn btn-sm btn-primary">保存</a>
                        <a href="/globaldata/profile/" class="btn btn-sm btn-default">取消</a>
                    </div>
                </div>
            </form>
        </div>

    </section>
</div>

@section css{
    
<link href="~/Areas/GlobalData/Content/css/mui.toast.css" rel="stylesheet" />
    <link href="~/Areas/GlobalData/Content/Scripts/fancybox/jquery.fancybox.min.css" rel="stylesheet" />
}

@section scripts{
<script src="~/Areas/GlobalData/Content/js/mui.js"></script>
<script src="~/Areas/GlobalData/Content/js/jquery-1.11.0.min.js"></script>

    <script src="~/Areas/GlobalData/Content/Scripts/fancybox/jquery.fancybox.min.js"></script>
    <script src="~/Areas/GlobalData/Content/js/img-tool/upload.js"></script>
    <script src="~/Areas/GlobalData/Content/Scripts/jquery.dialog.waitting-1.0/jquery.dialog.waitting-1.0.js"></script>

    <script>
       
        $().ready(function () {

            $('#btnSave').click(function () {
                var idImg = $('#IDNoFaceImg').val() + '|' + $('#IDNoBackImg').val();
                
                $('#Profile_IDImg').val(idImg);
                
                if ($('#Profile_IDImg').val() == ''
                    || $('#Profile_IDImg').val() == '|') {
                    return mui.toast('请上传身份证照片');
                }

                $.ajax({
                    type:'post',
                    url: "/globaldata/profile/create",
                    data: $('#form1').serialize(),
                    dataType:'json',
                    success: function (data) {
                       
                        mui.toast(data.Message);
                        console.log(data.Message);
                        if (data.Status) {
                            window.location.href = '/globaldata/profile';
                        }
                    },
                    error: function (arg1, arg2, arg3) {
                        console.log(arg3);
                        mui.toast(arg3);
                    }
                });
            });

        });

        $('#fileIDNoFaceImg').change(function () {

            var file = $(this)[0].files[0];
            if (!file) {
                mui.toast('未选择任何文件');
                return;
            }
            dialog.hide();
            dialog.show({ title: '正在上传文件...' });
            $('#facePreview').attr('src', File.getObjectURL(file));

            var option = {
                file: file,
                width: 500,
                callback: function (data) {
                    if (!data.url) {
                        return;
                    }
                    console.log(data.url);
                    $('#IDNoFaceImg').val(data.url);

                    dialog.hide();
                    dialog.show({ title: '正在识别身份证...' });
                    console.log(data.url);
                    $.ajax({
                        url: '/globaldata/ocr/getidcardinfo',
                        data: { filename: data.url },
                        dataType: "json",
                        success: function (data) {
                            console.log(data);
                            dialog.hide();
                            var result = 'kOtherError:Algorithm run failed  - face results are all empty';
                            if (data == result) {
                                return mui.toast('无法识别图片，请重新上传');
                            }

                            data = JSON.parse(data);
                            var cardinfo = JSON.parse(data.outputs[0].outputValue.dataValue);

                            if (cardinfo.num == '') {
                                mui.toast('自动识别失败，请填写身份证号码');
                            } else {
                                mui.toast('身份证识别成功');
                                $('#Profile_IDNo').val(cardinfo.num);
                                $('#Profile_Name').val(cardinfo.name);
                                $('#Profile_Gender').val(cardinfo.sex);
                            }

                        },
                        error: function (arg1, arg2, arg3) {
                            console.log(arg1.responseText);
                            dialog.hide();
                        }
                    });

                },
                error: function (arg1, arg2, arg3) { }
            };

            File.send(option);

        });

        $('#fileIDNoBackImg').change(function () {

            var file = $(this)[0].files[0];
            if (!file) {
                mui.toast('未选择任何文件');
                return;
            }
            dialog.hide();
            dialog.show({ title: '正在上传文件...' });
            $('#backPreview').attr('src', File.getObjectURL(file));

            var option = {
                file: file,
                width: 500,
                callback: function (data) {

                    if (data.url) {
                        $('#IDNoBackImg').val(data.url);
                    }
                    dialog.hide();

                }, error: function (arg1, arg2, arg3) {
                    dialog.hide();
                }
            };

            File.send(option);
        });

    </script>
}

